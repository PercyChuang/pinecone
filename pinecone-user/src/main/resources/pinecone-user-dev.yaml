# 服务端口号
server:
  port: 8083

spring:
  datasource:
    url: jdbc:mysql://39.96.185.194:3306/pinecone?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false
    username: pinecone
    password: pinecone
    # 使用druid数据源
    type: com.alibaba.druid.pool.DruidDataSource
    #驱动类地址
    driver-class-name: com.mysql.cj.jdbc.Driver
    #druid过滤器（stat为监控统计）
    filters: stat
    #连接池初始化连接数
    initialSize: 5
    #连接池最小连接数
    minIdle: 5
    #连接池最大连接数（此数量同时限制了spring方法的并发数，如设置为100，即便spring的service未调用数据库层，最大并发依然限制在100）
    maxActive: 180
    #获取连接等待超时的时间
    maxWait: 60000
    #间隔多久检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 验证数据库连接sql Oracle: select 1 from dual   MySql: select 1
    validationQuery: select 1
    #空闲时是否对连接进行验证
    testWhileIdle: true
    #游标缓存，Oracle配置为true，mysql配置为false。分库分表较多的数据库，建议配置为false
    poolPreparedStatements: false
    #maxOpenPreparedStatements: 20
  # rabbitmq 连接配置
  rabbitmq:
    host: 192.168.10.91
    port: 5672
    username: admin
    password: admin
  # redis 连接配置
  redis:
    host: 127.0.0.1
    password:
    port: 6379
    timeout: 10000 # 连接超时时间（毫秒）
    database: 1 # Redis默认情况下有16个分片，这里配置具体使用的分片，默认是0
    lettuce:
      pool:
        max-active: 16 # 连接池最大连接数（使用负值表示没有限制） 默认 8
        max-wait: -1 # 连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
        max-idle: 8 # 连接池中的最大空闲连接 默认 8
        min-idle: 0 # 连接池中的最小空闲连接 默认 0
  cloud:
    # sentinel 连接配置
    sentinel:
      nacos-addr: ${spring.cloud.nacos.config.server-addr}
      nacos-namespace: ${spring.cloud.nacos.discovery.namespace}
      nacos-group-id: SENTINEL_GROUP
      data-type: json
      transport:
        dashboard: 192.168.10.91:8180
        port: ${server.port}
      datasource:
        # 分组与命名空间和服务端保持一致
        flow:
          nacos:
            server-addr: ${spring.cloud.sentinel.nacos-addr}
            namespace: ${spring.cloud.sentinel.nacos-namespace}
            data-id: ${spring.application.name}-sentinel-flow-rules
            group-id: ${spring.cloud.sentinel.nacos-group-id}
            # 规则类型，取值见：org.springframework.cloud.alibaba.sentinel.datasource.RuleType
            rule-type: flow
            data-type: ${spring.cloud.sentinel.data-type}
        degrade:
          nacos:
            server-addr: ${spring.cloud.sentinel.nacos-addr}
            namespace: ${spring.cloud.sentinel.nacos-namespace}
            data-id: ${spring.application.name}-sentinel-degrade-rules
            group-id: ${spring.cloud.sentinel.nacos-group-id}
            rule-type: degrade
            data-type: ${spring.cloud.sentinel.data-type}
        system:
          nacos:
            server-addr: ${spring.cloud.sentinel.nacos-addr}
            namespace: ${spring.cloud.sentinel.nacos-namespace}
            data-id: ${spring.application.name}-sentinel-system-rules
            group-id: ${spring.cloud.sentinel.nacos-group-id}
            rule-type: system
            data-type: ${spring.cloud.sentinel.data-type}
        authority:
          nacos:
            server-addr: ${spring.cloud.sentinel.nacos-addr}
            namespace: ${spring.cloud.sentinel.nacos-namespace}
            data-id: ${spring.application.name}-sentinel-authority-rules
            group-id: ${spring.cloud.sentinel.nacos-group-id}
            rule-type: authority
            data-type: ${spring.cloud.sentinel.data-type}
        param-flow:
          nacos:
            server-addr: ${spring.cloud.sentinel.nacos-addr}
            namespace: ${spring.cloud.sentinel.nacos-namespace}
            data-id: ${spring.application.name}-sentinel-param-flow-rules
            group-id: ${spring.cloud.sentinel.nacos-group-id}
            rule-type: param-flow
            data-type: ${spring.cloud.sentinel.data-type}

#mybatis
mybatis-plus:
  mapper-locations: classpath*:/mapper/*.xml
  #实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: cn.acorg.*.entity
  #数据库相关配置
  global-config:
    db-config:
      #全局默认主键类型  1. AUTO 数据库ID自增  2. NONE 无状态,该类型为未设置主键类型(注解里等于跟随全局,全局里约等于 INPUT)  3. INPUT	insert前自行set主键值
      # 4. ASSIGN_ID 分配ID(主键类型为Number(Long和Integer)或String) 雪花算法， ASSIGN_UUID	分配UUID, 主键类型为String 雪花算法
      id-type: assign_id
      #字段策略 IGNORED:"忽略判断",NOT_NULL:"非 NULL 判断"),NOT_EMPTY:"非空判断"
      field-strategy: NOT_NULL
      #驼峰下划线转换
      column-underline: true
      #逻辑删除
      logic-delete-field: isDel  # 全局逻辑删除的实体字段名
      logic-delete-value: 1 # 逻辑已删除值(默认为 1)
      logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)
    #是否控制台打印 mybatis-plus 的 LOGO
    banner: false
  #原生配置
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
    call-setters-on-nulls: true
    jdbc-type-for-null: 'null'
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
#分页插件
pagehelper:
  reasonable: false # 禁用合理化时，如果pageNum<1或pageNum>pages会返回空数据
  support-methods-arguments: true
  params: count= countSql
  row-bounds-with-count: true
  helper-dialect: mysql

# Feign 客户端设置
feign:
  # 开启 Feign 对 Sentinel 的支持
  sentinel:
    enabled: true
  # Feign 请求/响应压缩
  compression:
    request:
      enabled: true
      mime-types: text/xml,application/xml,application/json
      min-request-size: 4096
    response:
      enabled: true
      useGzipDecoder: true

# Ribbon 配置
ribbon:
  # 连接超时（单位：毫秒）
  ConnectTimeout: 100000
  # 响应超时（单位：毫秒）
  ReadTimeout: 100000
  #同一台实例最大重试次数,不包括首次调用
  MaxAutoRetries: 1
  #重试负载均衡其他的实例最大重试次数,不包括首次调用
  MaxAutoRetriesNextServer: 2
  #是否所有操作都重试
  OkToRetryOnAllOperations: false

seata:
  enabled: true
  application-id: ${spring.application.name}
  tx-service-group: test_service_tx_group
  data-source-proxy-mode: AT
  enable-auto-data-source-proxy: false
  service:
    vgroup-mapping:
      test_service_tx_group: default
  config:
    type: nacos
    nacos:
      server-addr: ${spring.cloud.nacos.config.server-addr}
      group : SEATA_GROUP
      namespace: ${spring.cloud.nacos.config.namespace}
      username: nacos
      password: nacos
  registry:
    type: nacos
    nacos:
      application: pinecone-seata-server
      server-addr: ${spring.cloud.nacos.config.server-addr}
      group: SEATA_GROUP
      namespace: ${spring.cloud.nacos.config.namespace}
      username: nacos
      password: nacos